# ===================================================== #
#                  Initialize Autotools                 #
# ===================================================== #

# define version string for fortune-fish
m4_define([fortune-fish_version], [1.0.0])
AC_DEFINE([FF_VERSION], [fortune-fish_version], [Version string of fortune-fish])

# initialize autotools
AC_PREREQ([2.60])
AC_INIT([fortune-fish], [fortune-fish_version],
		[https://github.com/kstrnisa/fortune-fish])
AC_CONFIG_HEADERS([config.h])
AM_INIT_AUTOMAKE([1.8])
AM_SILENT_RULES([yes])
AM_MAINTAINER_MODE()


# ===================================================== #
#               Basic compiler settings                 #
# ===================================================== #

AC_PROG_CC()
AM_PROG_CC_C_O()


# ===================================================== #
#                 Initialize libtool                    #
# ===================================================== #

LT_PREREQ([2.2.6])
LT_INIT([disable-static])


# ===================================================== #
#                     i18n support                      #
# ===================================================== #

AC_SUBST([GETTEXT_PACKAGE], [fortune-fish])
AC_DEFINE_UNQUOTED([GETTEXT_PACKAGE], "$GETTEXT_PACKAGE",
	[Define to the gettext package name])
AM_GLIB_GNU_GETTEXT()
IT_PROG_INTLTOOL([0.35], [no-xml])


#==================================================== #
#          	  Check for required packages             #
#=====================================================#

m4_define([gtk_minimum_version], [3.14.0])
m4_define([glib_minimum_version], [2.42.0])

PKG_CHECK_MODULES([GTK], [gtk+-3.0 >= gtk_minimum_version])
PKG_CHECK_MODULES([GLIB], [glib-2.0 >= glib_minimum_version])


#=======================================================#
#                 Panel plugins                         #
#=======================================================#

AC_ARG_ENABLE([xfce],
	AS_HELP_STRING([--enable-xfce], [Build XFCE panel plugins]))

m4_define([libxfce4ui_minimum_version], [4.12.0])
m4_define([libxfce4util_minimum_version], [4.12.0])
m4_define([libxfce4panel_minimum_version], [4.12.0])

if test "x$enable_xfce" = "xyes"; then
	PKG_CHECK_MODULES([LIBXFCE4UI], [libxfce4ui-2 >= libxfce4ui_minimum_version])
	PKG_CHECK_MODULES([LIBXFCE4UTIL], [libxfce4util-1.0 >= libxfce4util_minimum_version])
	PKG_CHECK_MODULES([LIBXFCE4PANEL], [libxfce4panel-2.0 >= libxfce4panel_minimum_version])
fi

AM_CONDITIONAL([BUILD_XFCE_PLUGIN], [test "x$enable_xfce" = "xyes"])


#=======================================================#
#              Substitute platform flags                #
#=======================================================#

AC_MSG_CHECKING([PLATFORM_CPPFLAGS])
AC_MSG_RESULT([$PLATFORM_CPPFLAGS])
AC_SUBST([PLATFORM_CPPFLAGS])
AC_MSG_CHECKING([PLATFORM_CFLAGS])
AC_MSG_RESULT([$PLATFORM_CFLAGS])
AC_SUBST([PLATFORM_CFLAGS])
AC_MSG_CHECKING([PLATFORM_LDFLAGS])
AC_MSG_RESULT([$PLATFORM_LDFLAGS])
AC_SUBST([PLATFORM_LDFLAGS])


AC_CONFIG_FILES([
	Makefile
	src/Makefile
	src/xfce/Makefile
	data/Makefile
	data/icons/Makefile
	data/icons/48x48/Makefile
	data/pixmaps/Makefile
	po/Makefile.in
])
AC_OUTPUT

echo "prefix:               ${prefix}"
echo "Build XFCE plugin:    ${enable_xfce}"
